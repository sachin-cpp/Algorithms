#include <iostream>
#include <bits/stdc++.h>
using namespace std;
#define V 9 

int min( bool visited[] , int dist[])
{
    int m = INT_MAX;
    int min_index = 0 ;
    for(int i=0;i<V;i++)
    {
        if(visited[i] == false)
        {
            if(m < dist[i])
            {
                m = dist[i];
                min_index = i;
            }
        }
    }
}

void print(int dist[])
{
    for(int i=0;i<V;i++)
    {
        cout<<dist[i]<<" ";
    }
}

void prims(int graph[V][V] )
{
    int dist[V];
    bool visited[V];
    for(int i=0;i<V;i++)
    {
        dist[i] = INT_MAX;
        visited[i] = false;
    }
    dist[0]=0;
    
    for(int i=0;i<V;i++)
    {
        int u = min(visited , dist);
        
        visited[u] = true;
        
        for(int j = 0;j<V;j++)
        {
            if((graph[u][j] != 0)&& (visited[j] == false))
            {
                if(graph[u][i] < dist[i])
                {
                    dist[i] = graph[u][i];
                }
            }
        }
        
    }
    
    print(dist);
    
    
    
    
}

int main() 
{
	
	int graph[V][V] = { { 0, 4, 0, 0, 0, 0, 0, 8, 0 }, 
						{ 4, 0, 8, 0, 0, 0, 0, 11, 0 }, 
						{ 0, 8, 0, 7, 0, 4, 0, 0, 2 }, 
						{ 0, 0, 7, 0, 9, 14, 0, 0, 0 }, 
						{ 0, 0, 0, 9, 0, 10, 0, 0, 0 }, 
						{ 0, 0, 4, 14, 10, 0, 2, 0, 0 }, 
						{ 0, 0, 0, 0, 0, 2, 0, 1, 6 }, 
						{ 8, 11, 0, 0, 0, 0, 1, 0, 7 }, 
						{ 0, 0, 2, 0, 0, 0, 6, 7, 0 } }; 
						
	prims(graph);
	
	return 0;
}
