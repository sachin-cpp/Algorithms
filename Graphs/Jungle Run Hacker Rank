#include<bits/stdc++.h>
using namespace std;

int ar[1000][1000];
int vis[1000][1000];
int dist[1000][1000];
int t;

int dx[4]={1,-1,0,0};
int dy[4]={0,0,1,-1};

bool isValid(int a,int b)
{
    if(a<1 || a>t || b>t || b<1) return false;
    if(vis[a][b] == 1 || ar[a][b]==1) return false;

    return true;
}

void dfs(int a,int b)
{
    queue<pair<int,int>> q;
    q.push({a,b});
    vis[a][b]=1;
    dist[a][b]=0;

    while(!q.empty())
    {
        int x=q.front().first;
        int y=q.front().second;
        q.pop();

        for(int i=0;i<4;i++)
        {
            int newx=x + dx[i];
            int newy=y+ dy[i];
            
            if(isValid(newx,newy))
            {
                
                dist[newx][newy] = dist[x][y] + 1;
                vis[newx][newy]=1;
                q.push({newx,newy});
            }

        }
        
    }

}

int main()
{
    
    cin>>t;
    
    int si,sj,ei,ej;
    for(int i=1;i<=t;i++)
    {
        for(int j=1;j<=t;j++)
        {
            char c;
            cin>>c;
            if(c=='S')
            {
                si=i;
                sj=j;
                ar[i][j]=0;
            }
            else if(c=='T')
            {
                ar[i][j]=1;
            }
            else if(c=='P')
            {
                ar[i][j]=0;
            }
            else{
                ei=i;
                ej=j;
            }
        }
    }
    dfs(si,sj);

    cout<<dist[ei][ej]<<endl;


}
